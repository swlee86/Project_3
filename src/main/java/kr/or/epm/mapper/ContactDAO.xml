<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.epm.DAO.ContactDAO">

	<!-- 그룹별 조회 -->
	<select id="selectContact_group" resultType="kr.or.epm.VO.Contact">
		select contact_no, c.group_no, group_name, name, attach, 
	       		birth, mail, pic, tel1, tel2, memo 
		from contact c 
		join c_group g 
		  on c.group_no = g.group_no 
		where contact_no 
		in (select contact_no from emp_contact where emp_no=#{emp_no}) 
		and c.group_no=(select group_no from c_group where group_name=#{group_name})
	</select>


	<!-- 상세조회 -->
	<select id="selectContact_detail" resultType="kr.or.epm.VO.Contact">
		select contact_no, c.group_no, group_name, name, attach, 
       			birth, mail, pic, tel1, tel2, memo 
       	from contact c 
       	join c_group g 
       		on c.group_no = g.group_no
		where contact_no = #{contact_no}
	</select>
	
	<!-- 주소록 상세조회 수정 -->
	<update id="updateContact_detail" parameterType="kr.or.epm.VO.Contact">
		update contact 
		set group_no = (select group_no from c_group where group_name=#{group_name}), name=#{name}, attach=#{attach}, 
		    birth =#{birth}, mail =#{mail}, pic=#{pic}, 
		    tel1=#{tel1}, tel2=#{tel2}, memo=#{memo} 
		where contact_no=#{contact_no}
	</update>
	


	<!-- 주소록 상세조회 삭제  / 트랜잭션 필요-->
	<delete id="deleteEmpContact" parameterType="String">
		delete emp_contact where contact_no=#{contact_no}			
	</delete>
	<delete id="deleteContact" parameterType="String">
		delete contact where contact_no=#{contact_no}
	</delete>



	<!-- 그룹에 작성한 이름의 그룹이 존재하는지 유효성 검사 -->
	<select id="selectGroupCheck_name" parameterType="String" resultType="Integer">
		select count(*) from c_group where group_name=#{group_name}
	</select>
	
	<!-- 그룹목록불러오기  / 위의 유효성 검사 결과가 0이면 작업진행-->
	<insert id="insertGroup" parameterType="String">
		insert into c_group(group_no,group_name) vlaues(c_group_seq.nextval,#{group_name})
	</insert>
	
	
	
</mapper>