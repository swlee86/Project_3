<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.epm.DAO.PjDAO">

<!--
	작성일 : 2016-11-20
	작성자 : 백승아
	사용 목적 : 프로젝트에 대한 mapper
-->
	
	<!-- <select id="">
		select nvl(count(*),0) 
		from pj p join contact c on e.contact_no=c.contact_no 
		where e.emp_no=#{param1} and (${param2} like '%${param3}%') and (name &gt;= #{param4} and name &lt;= #{param5}) and (group_no ${param6})
	</select> -->
	
	<select id="selectStepName">
		 select step_no from approval where step_name=#{step_name}
	</select>
	
	<!-- 등록인 사번 구하는 함수 -->
	<select id="selectInfoSearch" resultType="kr.or.epm.VO.Emp">
		select e.emp_no
		from  emp_detail d join emp e
		on d. emp_no = e.emp_no
		where d.id=#{id}
	</select>
	
	<select id="selectMaxPj_no"  resultType="int">
		select max(to_number(pj_no)) from pj
	</select>
	
	<!-- 프로젝트 등록하기 -->
	<insert id="insertPj">
		insert into pj(pj_no, emp_no, pj_title, pj_content, pj_start, pj_end, pj_progress, rec_emp_no, rec_del_check, pj_step_no, step_no)
		values(pj_seq.nextval, #{emp_no}, #{pj_title}, #{pj_content}, #{pj_start}, #{pj_end}, '0', #{rec_emp_no}, '0', '2', '4')
	</insert>
	
	<insert id="insertPjd_people">
		insert into pjd_people(pjd_no, emp_no)
		values(#{param1}, #{param2})
	</insert>
	
	<!-- 프로젝트 상세 등록하기 -->
	<insert id="insertPjd">
		insert into pjd(pjd_no, pj_no, pjd_title, 
					    pjd_content, pjd_start, pjd_end, 
					    pj_step_no, pjd_progress)
		values(pjd_seq.nextval, #{pj_no}, #{pjd_title},
			   #{pjd_content}, #{pjd_start}, #{pjd_end}, 
			   '2','0')
	</insert>
	
	<!--프로젝트 상세번호  -->
	<select id="selectMaxPjd_no" resultType="String">
		select e.pjd_no
		from(select pjd_no from pjd order by to_number(pjd_no) desc) e
		where ROWNUM &lt;= #{numrow}
	</select>
	
	<!-- 프로젝트 승인 대기함 조회하기 -->
	<select id="selectPj_rec" resultType="kr.or.epm.VO.Pj">
		select pj_no, p.emp_no, e.emp_name, pj_title, pj_start, pj_end, step_no
		from pj p join emp e on p.emp_no = e.emp_no
		where rec_emp_no = #{rec_emp_no} and  rec_del_check = '0'
	</select>
	
	<!-- 프로젝트 승인 대기함 상세보기 -->
	<select id="selectPj_detail" resultType="kr.or.epm.VO.Pj">
		select p.pj_no, p.emp_no, e.emp_name, 
			   pj_title, pj_content, pj_start, 
			   pj_end, step_no, d.emp_no
		from pj p join emp e
		on p.emp_no = e.emp_no
  		left outer join (select distinct emp_no, d.pj_no
                     	 from pjd_people p join pjd d
                     	 on p.pjd_no = d.pjd_no
                     	 where d.pj_no = #{pj_no}) d
    	on p.pj_no = d.pj_no
		where p.pj_no = #{pj_no}
	</select>
	
	<!-- 프로젝트 승인 대기함에서 삭제하기 -->
	<update id="deletePj_rec">
		update pj
		set rec_del_check = '1'
		where pj_no = #{pj_no}
	</update>
	
	<!-- 프로젝트 진행 단계 처리하기 -->
	<update id="updatePj_step">
		update pj
		set pj_step_no = #{pj_step_no}
		where pj_no = #{pj_no}
	</update>
	
	<!-- 프로젝트 승인 처리하기 -->
	<update id="updatePj_approval">
		update pj
		set step_no = #{step_no}
		where pj_no = #{pj_no}
	</update>
	
	<!-- 프로젝트 조회하기(승인처리된것들만) -->
	<select id="selectPj" resultType="kr.or.epm.VO.Pj">
		select pj_no, p.emp_no, e.emp_name, l.dept_name, pj_title, pj_content, pj_start, 
		       pj_end, pj_progress, p.pj_step_no, s.pj_step_name
		from pj p join emp e
			  on p.emp_no = e.emp_no
			join pj_step s
			  on p.pj_step_no = s.pj_step_no
	    join low_dept l
	      on e.low_dept_no = l.low_dept_no
			where p.step_no = (select step_no from approval where step_name='승인')
			order by s.step asc, pj_start desc
	</select>
	
	<!-- 프로젝트에서 내가 만든 프로젝트만 조회하기(승인처리된것들만) -->
	<select id="selectPj_write" parameterType="String" resultType="kr.or.epm.VO.Pj">
		select p.pj_no, p.emp_no, e.emp_name, l.dept_name, 
				pj_title, pj_content, pj_start, 
				pj_end, pj_progress, p.pj_step_no, s.pj_step_name
		from pj p 
		join pj_step s
				on p.pj_step_no = s.pj_step_no
		join emp e
				on p.emp_no = e.emp_no
		join low_dept l
		      on e.low_dept_no = l.low_dept_no      
		where  p.emp_no=#{emp_no} and step_no = (select step_no from approval where step_name='승인')
		order by s.step asc, pj_start desc
	</select>
	
	<!-- 프로젝트에서 내가 포함된 프로젝트만 조회하기(승인처리된것들만) -->
	<select id="selectPj_include" parameterType="String" resultType="kr.or.epm.VO.Pj">
		select p.pj_no, p.emp_no, e.emp_name, l.dept_name, 
				pj_title, pj_content, pj_start, 
				pj_end, pj_progress, p.pj_step_no, s.pj_step_name
		from pj p 
		join pj_step s
				on p.pj_step_no = s.pj_step_no
		join emp e
				on p.emp_no = e.emp_no
		join low_dept l
				on e.low_dept_no = l.low_dept_no      
		where pj_no in (select distinct(pj_no) from pjd where pjd_no in (select pjd_no from pjd_people where emp_no=#{emp_no}))
			        and step_no = (select step_no from approval where step_name='승인')
		order by s.step asc, pj_start desc
	</select>
	
	
	<!-- 프로젝트 내가 작성한것 and 내가 참여자인것 프로젝트 목록 가져오기 --> 
	<select id="selectPj_callendar" parameterType="String" resultType="kr.or.epm.VO.Pj">
		select p.pj_no, p.emp_no, e.emp_name, l.dept_name, 
            pj_title, pj_content, pj_start, 
            pj_end, pj_progress, p.pj_step_no, s.pj_step_name
     	from pj p 
      	join pj_step s
            on p.pj_step_no = s.pj_step_no
      	join emp e
            on p.emp_no = e.emp_no
      	join low_dept l
            on e.low_dept_no = l.low_dept_no      
      	where ((pj_no in (select distinct(pj_no) from pjd where pjd_no in (select pjd_no from pjd_people where emp_no=#{emp_no}))) or p.emp_no=#{emp_no})
                 and step_no = (select step_no from approval where step_name='승인')
      	order by s.step asc, pj_start desc
	</select>
	
</mapper>