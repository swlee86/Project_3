<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.epm.DAO.DeptDAO">

	<!-- 관리자 > 부서관리 > 부서 선택시  selectbox-->
	<select id="deptList" resultType="kr.or.epm.VO.Dept">
		select dept_name, dept_no from dept where branch_name = #{branch_name} and his_check=1
	</select>

    <!-- 지점번호로 부서 조회하기 > 지점 삭제시 사용-->
    <select id="select_dept_beforeDelete" resultType="kr.or.epm.VO.Dept">
    	select dept_no, dept_name from dept where branch_no=#{branch_no} and his_check='1'
    </select>

	<!-- 관리자 > 부서관리 > 부서 조회하기 -->
	<select id="selectChooseDept" parameterType="String" resultType="kr.or.epm.VO.DeptJoinBonus">
	select d.dept_no, d.branch_name, d.branch_no, d.dept_name, s.bonus_percent, s.bonus_check
	from dept d join set_bonus s
	on d.dept_no = s.dept_no
	where his_check='1' and d.dept_no=#{dept_no}
	</select>
	
	<!-- 부서 추가하기 1)-->
	<insert id="insertDept" parameterType="kr.or.epm.VO.DeptJoinBonus">
	  insert into dept(dept_no, branch_no, branch_name, 
							dept_name, pre_dept_no, his_check, depth)
		values(dept_seq.nextval, #{branch_no}, #{branch_name}, #{dept_name}, null, 1, 1)
	</insert>
	
	  <!-- 지점 번호 뽑아오기 2) -->
	<select id="selectBranchName_No" resultType="String">
		select branch_no
		from branch
		where branch_name = #{param1} and his_check='1'
	</select>
	
	<!--부서 추가하기 3) -->
	<insert id="addDept_set_bonus" parameterType="kr.or.epm.VO.DeptJoinBonus">
		insert into set_bonus (set_date, dept_no, bonus_percent, bonus_check)
		values(#{set_date}, #{dept_no}, #{bonus_percent}, 0)
	</insert>

 
   
   
    
    <!-- 부서 정보 수정하기   > dept insert 1-->
    <insert id="insert_re_Dept" parameterType="kr.or.epm.VO.DeptJoinBonus">
      insert into dept(dept_no, branch_no, branch_name, 
							dept_name, pre_dept_no, his_check, depth)
	  values(dept_seq.nextval, #{branch_no}, #{branch_name}, #{dept_name}, #{dept_no}, 1, 1)				
    </insert>
    
    <!-- 부서 수정하기  > 이전 부서 update 2) -->
	<update id="update_pre_dept" parameterType="kr.or.epm.VO.DeptJoinBonus">
	   update dept set his_check=0 where dept_no=#{dept_no}
	</update>
    
    <!-- 변경된 dept_no 조회하기 3) --> 
    <select id="search_new_dept_no" parameterType="kr.or.epm.VO.DeptJoinBonus" resultType="String">
    	select dept_no from dept where pre_dept_no=#{dept_no}
    </select>
    
    <!-- 부서 수정하기 > 보너스  4)-->
    <update id="modifyset_bonus" parameterType="kr.or.epm.VO.DeptJoinBonus">
        update set_bonus set set_date=#{set_date}, dept_no=#{dept_no}, bonus_percent=#{bonus_percent} where dept_no=${pre_dept_no}
    </update>
    
   <!--부서 소속 하위부서 개수 구하기 5)-->
   <select id="count_lowDept" parameterType="kr.or.epm.VO.DeptJoinBonus" resultType="Integer">
     select count(*) from low_dept where dept_no=#{pre_dept_no} and his_check='1'
    </select>
   
   <!-- 하위부서의 부서번호, 부서 이름 update 6)-->
   <update id="update_lowDept" parameterType="kr.or.epm.VO.DeptJoinBonus">
   	 update low_dept set dept_no=#{dept_no}, dept_name=#{dept_name} where dept_no=#{pre_dept_no} and his_check='1'
   </update>
    
    
    
   <!--  부서 삭제하기-->
    <update id="dept_delete" parameterType="String">
      update dept set his_check='0' where dept_no=#{dept_no}
    </update>
  
  
    <!--수정후 특정 부서 조회하기  -->
    <select id="selectDept" resultType="kr.or.epm.VO.DeptJoinBonus">
      select d.dept_no, d.pre_dept_no, b.set_date, b.bonus_percent
		from dept d join set_bonus b
		on d.dept_no= b.dept_no
		where d.pre_dept_no=#{param1}
    </select>
    
   <!--부서 번호 뽑아오기-->
	<select id="selectDeptNo" resultType="String" parameterType="String">
		select dept_no
		from dept
		where branch_name = #{param1} and dept_name=#{param2} and his_check='1'
	</select>
	
	<!-- 전체 부서 조회 -->
	<select id="select_allDept" resultType="kr.or.epm.VO.DeptJoinBonus">
	    select d.dept_no, dept_name, branch_name, bonus_check
	   from dept d join set_bonus b
	   on d.dept_no=b.dept_no
	   where d.his_check='1'
	   order by branch_name
	</select>

	<!--부서별 상여금 지급 여부 설정  -->
     <update id="update_bonusCheck">
       update set_bonus 
       set bonus_check=#{param2} 
       where dept_no=#{param1}
     </update>	
     
     <!--상여금 지급하는 부서 조회하기  -->	
     <select id="select_bonus_check" resultType="kr.or.epm.VO.Set_bonus">
     	select set_date, dept_no, bonus_percent, bonus_check from set_bonus 
     	where dept_no=#{dept_no} and bonus_check='1'
     </select>
	
</mapper>