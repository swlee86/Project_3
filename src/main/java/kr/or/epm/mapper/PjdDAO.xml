<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.epm.DAO.PjdDAO">

<!--
	작성일 : 2016-11-20
	작성자 : 백승아
	사용 목적 : 프로젝트 상세에 대한 mapper
	
	수정일 : 2016-11-25
	작성자 : 김주희
-->

	<!-- 큰 프로젝트에 대한 프로젝트 상세 조회하기 -->
	<select id="selectPjd" parameterType="String" resultType="kr.or.epm.VO.Pjd">
		select rownum,e.emp_name,pjd_no,d.pj_no,pjd_title,
				pjd_content,pjd_start,pjd_end,
				d.pj_step_no, pj_step_name 
			from pjd d join pj_step s
				on d.pj_step_no = s.pj_step_no
	    join emp e
	      on (select emp_no from pj where pj_no=#{pj_no}) = e.emp_no
	  	where d.pj_no = #{pj_no}
	  	order by pjd_end asc
	</select>
	
	<!-- 프로젝트 상세 등록하기 -->
	<insert id="insertPjd">
		insert into pjd(pjd_no, pj_no, pjd_title, 
					    pjd_content, pjd_start, pjd_end, 
					    pj_step_no)
		values(pjd_seq.nextval, #{pj_no}, #{pjd_title},
			   #{pjd_content}, #{pjd_start}, #{pjd_end}, 
			   '2')
	</insert>
	
	<!-- 프로젝트 상세 수정하기 : TODO리스트 -->
	<update id="updatePjd">
		update pjd
		set pjd_title = #{pjd_title},
			pjd_content = #{pjd_content},
			pjd_start = #{pjd_start},
			pjd_end = #{pjd_end}
		where pjd_no = #{pjd_no}
	</update>
	
	<!-- 진행단게 처리하기 -->
	<update id="updatePjd_step">
		update pjd
		set pj_step_no = #{pj_step_no}
		where pjd_no = #{pjd_no}
	</update>
	
	<!-- 진행률 계산하기 -->
	<update id="updatePjd_progress">
		update pj
		set pj_progress = 0
	</update>
	
	<!-- 상세의 참여자 사진 조회하기 -->
	<select id="selectPeople" parameterType="String" resultType="kr.or.epm.VO.Pjd_people">
		select pjd_no, p.emp_no, e.emp_name, d.branch_name, d.dept_name, d.low_dept_name, cell_phone,pic
			from pjd_people p 
			join emp e 
			on p.emp_no = e.emp_no 
			join low_dept d
	    on e.low_dept_no = d.low_dept_no
	    where pjd_no=#{pjd_no}
	</select>
	
	<!-- 상세의 참여자 조회하기(modal) -->
	<select id="selectPeople_info" parameterType="String" resultType="kr.or.epm.VO.Pjd_people">
		select pjd_no, p.emp_no, e.emp_name, d.branch_name, d.dept_name, 
				d.low_dept_name, cell_phone, emp_tel, birth, email,pic
			from pjd_people p 
			join emp e 
			on p.emp_no = e.emp_no 
			join low_dept d
	    on e.low_dept_no = d.low_dept_no
	    where p.emp_no=#{emp_no}
	</select>
	
	<!-- 프로젝트 상세 조회하기(단일)	 -->
	<select id="selectPjd_Detail" parameterType="String" resultType="kr.or.epm.VO.Pjd">
		select pjd_no,pj_no,pjd_title,pjd_content,pjd_start,pjd_end from pjd where pjd_no=#{pjd_no}
	</select>
	
	<!-- 최근 글  번호-->
	<select id="selectMaxContact_No" resultType="int">
		select max(to_number(contact_no)) from contact where name = #{name}
	</select>
	
	<!-- 등록인 사번 구하는 함수 -->
	<select id="selectInfoSearch" resultType="kr.or.epm.VO.Emp">
		select e.emp_no
		from  emp_detail d join emp e
		on d. emp_no = e.emp_no
		where d.id=#{id}
	</select>
	
	
	<!-- 주소록테이블 등록 -->
	<insert id="insertContact" parameterType="kr.or.epm.VO.Contact">
		insert into contact(contact_no, group_no, name, attach, birth, mail, pic, tel1, tel2, memo) 
		values(contact_seq.nextval,#{group_no}, #{name}, #{attach, jdbcType=VARCHAR}, #{birth, jdbcType=VARCHAR}, #{mail, jdbcType=VARCHAR}, #{pic, jdbcType=VARCHAR}, #{tel1}, #{tel2}, #{memo, jdbcType=VARCHAR})
	</insert>
	
	<!--개인 주소록테이블  등록 -->
	<insert id="insertEmpContact">
		insert into emp_contact(emp_no,contact_no,groups) values(#{emp_no},#{contact_no},(concat((select distinct groups from emp_contact where emp_no=#{emp_no}),'${groups},')))	
	</insert>
	
	<!-- 상세의 상세내역 -->
 	<select id="selectPjdd" parameterType="String" resultType="kr.or.epm.VO.Pjdd">
		select pjdd_no,pjd_no,pjdd_content,fin_check from pjdd where pjd_no=#{pjd_no} order by to_number(pjdd_no) asc
 	</select>
 	
 	<!-- 상세의 상세내역 추가 -->
 	<insert id="insertPjdd" parameterType="kr.or.epm.VO.Pjdd">
 		insert into pjdd(pjdd_no,pjd_no,pjdd_content,fin_check) values(pjdd_seq.nextval,#{pjd_no},#{pjdd_content},'0')
	</insert>
</mapper>