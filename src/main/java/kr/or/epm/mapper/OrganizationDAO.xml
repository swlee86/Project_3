<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.epm.DAO.OrganizationDAO">

   <!-- 작성일 : 2016-11-20 
   		작성자 : 백승아 
   		사용 목적 : 조직도에 대한 mapper
	-->

	<!--개인 주소록테이블  등록 -->
	<insert id="insertEmpContact">
		insert into emp_contact(emp_no,contact_no,groups) values(#{emp_no},#{contact_no},(select nvl((SELECT (select distinct groups from emp_contact where emp_no=#{emp_no}) AS empgroup FROM DUAL),'1,') from dual))
	</insert>
	
	
	<!-- 최근 글  번호-->
	<select id="selectMaxContact_No" resultType="int">
		select max(to_number(contact_no)) from contact where name = #{name}
	</select>
	
	<!-- 등록인 사번 구하는 함수 -->
	<select id="selectInfoSearch" resultType="kr.or.epm.VO.Emp">
		select e.emp_no
		from  emp_detail d join emp e
		on d. emp_no = e.emp_no
		where d.id=#{id}
	</select>
	
	
	<!-- 주소록테이블 등록 -->
	<insert id="insertContact" parameterType="kr.or.epm.VO.Contact">
		insert into contact(contact_no, group_no, name, attach, birth, mail, pic, tel1, tel2, memo) 
		values(contact_seq.nextval,#{group_no}, #{name}, #{attach, jdbcType=VARCHAR}, #{birth, jdbcType=VARCHAR}, #{mail, jdbcType=VARCHAR}, #{pic, jdbcType=VARCHAR}, #{tel1}, #{tel2}, #{memo, jdbcType=VARCHAR})
	</insert>

   <!--지점 리스트 뿌리기 -->
   <select id="selectBranch" resultType="kr.or.epm.VO.Organization">
      select branch_name, branch_no, depth
      from branch
      where his_check = '1'
   </select>

   <!--부서 -->
   <select id="selectDept" resultType="kr.or.epm.VO.Organization">
      select dept_name, d.depth, dept_no
      from dept d join branch b
      on d.branch_no = b.branch_no
      where d.his_check = '1' and d.branch_no = #{branch_no}
   </select>

   <!-- 조직도 출력하기 -->
   <select id="selectOrganization">
      select b.branch_name, b.depth, d.dept_name, d.depth, l.low_dept_name, l.depth, e.emp_no, e.emp_name
      from (select branch_no, branch_name, depth
              from branch
              where his_check = '1') b join (select dept_no, branch_no, dept_name, depth
                                            from dept
                                            where his_check = '1') d
       on b.branch_no = d.branch_no
      join (select low_dept_no, dept_no, low_dept_name, depth
              from low_dept
              where his_check = '1') l
      on d.dept_no = l.dept_no
      join emp e
      on l.low_dept_no = e.low_dept_no
   </select>
   
   <!-- 하위부서 -->
   <select id="selectlowDept" resultType="kr.or.epm.VO.Organization">
      select low_dept_name, low_dept_no,
      l.depth
      from low_dept l join dept d
      on l.dept_no = d.dept_no
      where l.his_check = '1' and d.dept_no = #{dept_no}
   </select>
   
   <!--사원 정보 -->
   <select id="selectEmpInfo" resultType="kr.or.epm.VO.Organization">
      select emp_no, emp_name, birth, branch_name, low_dept_name, dept_name, cell_phone
      from emp e join low_dept d
      on d.low_dept_no = e.low_dept_no
      where d.low_dept_no = #{low_dept_no} and substr(e.emp_no,1,4) != 0000
   </select>
   
   <!-- 사원정보 > 조직도 모달 -->
   <select id="selectEmpInfo_modal" resultType="kr.or.epm.VO.Organization">
      select emp_no, emp_name, birth, branch_name, low_dept_name, dept_name, cell_phone,p.POSITION_NAME
      from emp e join low_dept d
      on d.low_dept_no = e.low_dept_no
      join position p 
      on p.position_no = e.position_no
      where d.low_dept_no = #{param1} and e.emp_no ! = ( select emp_no from emp_detail where id=#{param2})  and substr(e.emp_no,1,4) != 0000
   </select>
   
   
   <!-- 부서를 출력하기 위해 부서번호 가져오기 -->
   <select id="selectOrganization_dept_no">
   		select dept_no, dept_name, d.depth
		from dept d join branch b
		on d.branch_no = b.branch_no
		where d.his_check = '1' and b.branch_no = #{branch_no} and d.dept_name = #{dept_name}
   </select>
   
   <!-- 하위부서를 출력하기 위해 하위부서번호 가져오기 -->
   <select id="selectOrganization_low_dept_no">
   		select low_dept_no, low_dept_name, l.depth
		from low_dept l join dept d
		on l.dept_no = d.dept_no
		where l.his_check = '1' and d.dept_no = #{dept_no} and l.low_dept_name = #{low_dept_name}
   </select>
   
   <!-- 사원을 출력하기 위해 사번 가져오기 -->
   <select id="selectOrganization_emp_no">
   		select emp_no, emp_name
		from emp e join low_dept l
		on e.low_dept_no = l.low_dept_no
		where l.low_dept_no = #{low_dept_no}
   </select>

   <!--조직도에서 띄워 줄 modal 창에 나오는 사원 정보 쿼리(작성자 : 이상원)-->
   <select id="selectEmpInfoAll" resultType="kr.or.epm.VO.Organization">
      select emp_no, emp_name, branch_name, dept_name, low_dept_name, cell_phone, pic, email, emp_tel, birth
      from emp e join low_dept d
      on d.low_dept_no = e.low_dept_no
   </select>
   
   <!--조직도에서 대표 정보만 뽑는 쿼리 -->
   <select id="selectMasterEmpInfo" resultType="kr.or.epm.VO.Organization">
      select e.emp_no, e.emp_name, l.low_dept_name, l.tel, l.fax
	  from emp e join low_dept l
	  on e.low_dept_no = l.low_dept_no
	  join position p 
	  on e.position_no = p.position_no
	  where l.low_dept_no = #{low_dept_no} and p.step = '2'  
   </select>
   

</mapper>