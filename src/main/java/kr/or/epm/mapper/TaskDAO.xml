<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.epm.DAO.TaskDAO">

<!--
	작성일 : 2016-11-20
	작성자 : 백승아
	사용 목적 : 업무에 대한 mapper
-->

	<!-- 업무 등록하기 -->
	<insert id="insertTask" parameterType="kr.or.epm.VO.Task">
		insert into task(task_no, cg_no, sign, 
						 task_name, deadline, content, 
						 rec_emp_no, rec_name, rec_date, 
						 emp_no, emp_name, send_date, 
						 file_name, del_check, rec_del_check, 
						 task_step_no, step_no)
		values(task_seq.nextval, #{cg_no}, '0', 
			   #{task_name}, #{deadline}, #{content}, 
			   #{rec_emp_no}, #{rec_name}, null, 
			   #{emp_no}, #{emp_name}, to_char(sysdate, 'yyyy-mm-dd'), 
			   #{file_name, jdbcType=VARCHAR}, '0', '0', 
			   '2', '4')
	</insert>
	
	<!-- 업무 중요설정 -->
	<update id="updateTask_sign">
		update task
		set sign = #{param2}
		where task_no = #{param1}
	</update>
	
	<!-- 업무 수신함 갯수 구하기  -->
	<select id="selectCount_rec" resultType="int">
	select nvl(count(*),0)
    from(
          select task_no, cg_name, sign, task_name, deadline, emp_no, emp_name, send_date, file_name, t.step_no, a.step_name, a.step, rec_date
          from task t join task_cg c
          on t.cg_no = c.cg_no
          join approval a
          on t.step_no = a.step_no
          where rec_emp_no = #{param1} and  rec_del_check = '0' and  t.cg_no = #{param2}  and (${param3} like '%${param4}%') 
        )
	</select>
	
	<!-- 업무 수신함 확인하기 -->
	<select id="selectTask_rec" resultType="kr.or.epm.VO.Task">
	select task_no, cg_name, sign, task_name, deadline, emp_no, emp_name, send_date, file_name, step_no, step_name, step, rec_date, task_step_no from(
    	select rownum num,n.task_no, n.cg_name, n.sign, n.task_name, n.deadline, n.emp_no, n.emp_name, n.send_date, n.file_name, n.step_no, n.step_name, n.step, n.rec_date, n.task_step_no
    		from(
          		select task_no, cg_name, sign, task_name, task_step_no, deadline, emp_no, emp_name, send_date, file_name, t.step_no, a.step_name, a.step, rec_date
          			from task t join task_cg c
          			on t.cg_no = c.cg_no
          				join approval a
          			on t.step_no = a.step_no
          		where rec_emp_no = #{param1} and  rec_del_check = '0' and del_check='0' and t.cg_no = #{param2}  and (${param3} like '%${param4}%') 
          		order by a.step desc , t.task_no desc
        		) n 
    ) where num  between 1 + (${param5} - 1) * ${param6} and  ${param6} + (${param5} - 1) * ${param6}
	</select>
	
	
		<!-- 업무 송신함 갯수 하기 -->
	<select id="selectTask" resultType="kr.or.epm.VO.Task">
		select task_no, cg_name, task_name, 
			   deadline, rec_emp_no, rec_name, 
			   rec_date, send_date, file_name, 
			   task_step_no, t.step_no, a.step_name, a.step
		from task t join task_cg c 
		on t.cg_no = c.cg_no
    	join approval a
    	on t.step_no = a.step_no
		where emp_no = #{param1} and 
			  del_check = '0' and 
			  t.cg_no = #{param2}
    	order by a.step desc
	</select>
	

	
	<!-- 업무 송신함 갯수 구하기 -->
	<select id="selectCount_song" resultType="int">
	select nvl(count(*),0)
	from(
	select task_no, cg_name, task_name,   deadline, rec_emp_no, rec_name,  rec_date, send_date, file_name,  task_step_no, t.step_no, a.step_name, a.step
	from task t join task_cg c  on t.cg_no = c.cg_no
	join approval a on t.step_no = a.step_no
	where emp_no = #{param1} and del_check = '0' and  t.cg_no = #{param2} and (${param3} like '%${param4}%') 
	order by a.step desc , t.task_no desc
	)
	</select>
	
	
	<!-- 업무 송신함 확인하기 -->
	<select id="selectTask_song" resultType="kr.or.epm.VO.Task">
		select task_no, cg_name, task_name,   deadline, rec_emp_no, rec_name,  rec_date, send_date, file_name,  task_step_no, step_no, step_name, step from(
			select rownum num, n.task_no,  n.cg_name,  n.task_name,    n.deadline,  n.rec_emp_no,  n.rec_name,   n.rec_date,  n.send_date,  n.file_name,   n.task_step_no, n.step_no,  n.step_name,  n.step
			from(
			select task_no, cg_name, task_name,   deadline, rec_emp_no, rec_name,  rec_date, send_date, file_name,  task_step_no, t.step_no, a.step_name, a.step
			from task t join task_cg c  on t.cg_no = c.cg_no
			join approval a on t.step_no = a.step_no
			where emp_no = #{param1} and del_check = '0' and  t.cg_no = #{param2} and (${param3} like '%${param4}%') 
			order by a.step desc , t.task_no desc
			)n
			)where num  between 1 + (${param5} - 1) * ${param6} and  ${param6} + (${param5} - 1) * ${param6}
	</select>
	
	<!-- 업무 상세 조회하기 -->
	<select id="selectTask_detail" resultType="kr.or.epm.VO.Task">
		select t.task_no, cg_name, sign, 
			   task_name, deadline, content, 
			   rec_emp_no, rec_name, rec_date, 
			   t.emp_no, emp_name, send_date, 
			   file_name, t.step_no, t.task_step_no
		from task t join task_cg c
		on t.cg_no = c.cg_no
    	join approval a
    	on t.step_no = a.step_no
      	join task_step s
      	on t.task_step_no = s.task_step_no
      	where t.task_no = #{task_no}
	</select>
	
	<!--업무 요청 수신 상세 보기 업무 내용만 있음-->
	<select id="selectTask_receive_detail" resultType="kr.or.epm.VO.Task">
	   select task_no, cg_no, sign, task_name, deadline, content, emp_name, rec_name, emp_no, send_date, file_name, task_step_no, step_no from task where task_no = #{task_no}
	</select>
	
	<!-- 수신함에서 읽었을 때 수신일 데이터 삽입하기 -->
	<update id="updateTask_recDate">
		update task
    	set rec_date = to_char(sysdate, 'yyyy-mm-dd')
    	where task_no = #{task_no}
	</update>

	<!-- 업무 승인 처리하기 -->
	<update id="updateTask_approval">
		update task
		set step_no = #{param2}
		where task_no = #{param1}
	</update>
	
	<!-- 수신함에서 삭제하기 -->
	<update id="deleteTask_rec">
		update task
		set rec_del_check = '1'
		where task_no = #{task_no}
	</update>
	
	<!-- 송신함에서 삭제하기 -->
	<update id="deleteTask">
		update task
		set del_check = '1'
		where task_no = #{task_no}
	</update>
	
	<!-- 참여 업무 조회하기 / 마감기한이 현재 날짜와 가까운 순서대로 정렬 -->
	<select id="selectTask_people" resultType="kr.or.epm.VO.Task">
		 select task_no, cg_name, task_name,  deadline, rec_emp_no, rec_name,  emp_no, emp_name, file_name,   task_step_name, send_date, step_no,  task_step_no from(
    select rownum num, n.task_no, n.cg_name, n.task_name,  n.deadline, n.rec_emp_no, n.rec_name,  n.emp_no, n.emp_name, n.file_name,   n.task_step_name, n.send_date, n.step_no,  n.task_step_no, n.del_check
    from(
    select t.task_no, cg_name, task_name, del_check, deadline, rec_emp_no, rec_name,  t.emp_no, emp_name, file_name,   task_step_name, send_date, step_no,  t.task_step_no
		from task t join task_cg c on t.cg_no = c.cg_no
    join task_step s on t.task_step_no = s.task_step_no
		left outer join (select task_no, emp_no  from task_people where emp_no =  #{param1}) p
		on t.task_no = p.task_no
		where t.step_no = '1' and t.cg_no = '1' and  rec_emp_no =  #{param1} or  p.emp_no is not null and (t.${param2} like '%${param3}%')
		order by abs(trunc(to_date(deadline) - to_date(to_char(sysdate, 'yyyy-mm-dd')))) asc
    )n where task_step_no in ('1','2','3')
    )where del_check='0' and num   between 1 + (${param4} - 1) * ${param5} and  ${param5} + (${param4} - 1) * ${param5}
	</select>
	
	<!-- 참여 업무 개수 -->
	<select id="selectCount_parti" resultType="int">
	select nvl(count(*),0)
    from(
    select t.task_no, cg_name, task_name,  deadline, rec_emp_no, rec_name,  t.emp_no, emp_name, file_name,   task_step_name, send_date, step_no,  t.task_step_no
		from task t join task_cg c on t.cg_no = c.cg_no
    join task_step s on t.task_step_no = s.task_step_no
		left outer join (select task_no, emp_no  from task_people where emp_no =  #{param1}) p
		on t.task_no = p.task_no
		where t.step_no = '1' and t.cg_no = '1' and  rec_emp_no =  #{param1} or  p.emp_no is not null and (t.${param2} like '%${param3}%') 
		order by abs(trunc(to_date(deadline) - to_date(to_char(sysdate, 'yyyy-mm-dd')))) asc
    )
	</select>
	
	
	<!-- 참여 업무 진행 처리하기 -->
	<update id="updateTask_step">
		update task
		set task_step_no = #{param2}
		where task_no = #{param1}
	</update>
	
	
	
	<!-- 완료 업무 조회하기 / 마감기한이 현재 날짜와 가까운 순서대로 정렬 -->
	<select id="selectTask_people_end" resultType="kr.or.epm.VO.Task">
		 select task_no, cg_name, task_name,  deadline, rec_emp_no, rec_name,  emp_no, emp_name, file_name,   task_step_name, send_date, step_no,  task_step_no from(
    select rownum num, n.task_no, n.cg_name, n.task_name,  n.deadline, n.rec_emp_no, n.rec_name,  n.emp_no, n.emp_name, n.file_name,   n.task_step_name, n.send_date, n.step_no,  n.task_step_no, n.del_check
    from(
    select t.task_no, cg_name, task_name, del_check, deadline, rec_emp_no, rec_name,  t.emp_no, emp_name, file_name,   task_step_name, send_date, step_no,  t.task_step_no
		from task t join task_cg c on t.cg_no = c.cg_no
    join task_step s on t.task_step_no = s.task_step_no
		left outer join (select task_no, emp_no  from task_people where emp_no =  #{param1}) p
		on t.task_no = p.task_no
		where t.step_no = '1' and t.cg_no = '1' and  rec_emp_no =  #{param1} or  p.emp_no is not null and (t.${param2} like '%${param3}%')
		order by abs(trunc(to_date(deadline) - to_date(to_char(sysdate, 'yyyy-mm-dd')))) asc
    )n where task_step_no='4'
    )where del_check='0' and num between 1 + (${param4} - 1) * ${param5} and  ${param5} + (${param4} - 1) * ${param5}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 수신 글 개수 구하기 -->
	<select id="countTask_rec" resultType="Integer">
		select count(task_no)
		from task
		where cg_no = #{param2} and rec_emp_no = #{param1} and rec_del_check = '0'
	</select>
	
	<!-- 송신 글 개수 구하기 -->
	<select id="countTask" resultType="Integer">
		select count(task_no)
		from task
		where cg_no = #{param2} and emp_no = #{param1} and del_check = '0'
	</select>
	
	<!-- 수신함에서 검색하기 -->
	<select id="searchTask" resultType="kr.or.epm.VO.Task">
		select task_no, cg_name, sign,
       		   task_name, deadline, emp_no,
       		   emp_name, send_date, file_name,
       		   t.step_no, a.step_name, a.step, rec_date
		from task t join task_cg c
		on t.cg_no = c.cg_no
    	join approval a
    	on t.step_no = a.step_no
		where rec_emp_no = #{param1} and 
			  rec_del_check = '0' and 
			  t.cg_no = #{param2} and
        	  ${param3} like '%${param4}%'
    	order by a.step desc
	</select>
	
	<!-- 수신함에서 검색한 글의 개수 구하기 -->
	<select id="countTask_search" resultType="Integer">
		select count(task_no)
		from task t join task_cg c
		on t.cg_no = c.cg_no
		where rec_emp_no = #{param1} and 
			  rec_del_check = '0' and 
			  t.cg_no = #{param2} and
        	  #{param3} like '%${param4}%'
    	order by a.step desc
	</select>

	<!--내게 참조한 모든 업무 보기-->
	<select id="selectTask_people_ForMe" resultType="kr.or.epm.VO.Task_people">
		  select Task_NO, EMP_NO from task_people where emp_no = #{emp_no}
	</select>
	
	<!-- 업무 코멘트에 넣을 데이터 추출 -->
	<select id="emp_list" resultType="kr.or.epm.VO.Emp">
		select a.emp_name, b.branch_name, a.pic, b.dept_name, b.low_dept_name from(select emp_name, low_dept_no, pic from emp where emp_no=#{emp_no}) a join low_dept b on a.low_dept_no=b.low_dept_no
	</select>
	
	<!-- 업무 코멘트에 데이터 넣기 -->
	<insert id="insert_reply" parameterType="String">
		insert into task_reply(reply_no, emp_name, create_date, row_dept_name, task_no, contents, pic) values(TASK_REPLY_NO.nextval, #{param2}, sysdate, #{param3}, #{param1}, #{param4}, nvl(#{param5}, 'Reply_Basic_Pic'))
	</insert>
	
	<!-- 업무 상세의 리플 구하기 -->
	<select id="re_list" resultType="kr.or.epm.VO.Task_reply">
		select * from task_reply where task_no=#{task_no}
	</select>
</mapper>
