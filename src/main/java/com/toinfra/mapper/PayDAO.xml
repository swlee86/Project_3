<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toinfra.DAO.PayDAO">

<!--
	작성일 : 2016-11-20
	작성자 : 백승아
	사용 목적 : 급여에 대한 mapper
-->

	<!-- 급여 등록하기 -->
	<insert id="insertPay" parameterType="com.toinfra.DTO.Pay">
		insert into pay(pay_no, emp_no, basic_pay, severance_pay, bonus, add_pay, total_pay, give_date, master_check)
		values(pay_seq.nextval, #{emp_no}, #{basic_pay}, 0, #{bonus}, #{add_pay}, #{total_pay}, null, '0')
	</insert>

	<!-- 본인의 급여 내역 조회하기 -->
	<select id="selectPay_mine_all" resultType="com.toinfra.DTO.Pay">
		select pay_no, basic_pay, bonus, add_pay, total_pay, give_date
		from pay
		where emp_no = #{emp_no} and give_date is not null
		order by give_date asc
	</select>
	
	<!--월별 급여 조회  -->
	<select id="selectPay_mine_Monthly" resultType="com.toinfra.DTO.Pay">
		select pay_no, emp_no, basic_pay, bonus, add_pay, total_pay, give_date
		from pay
		where emp_no = #{param1} and give_date like '%${param2}%'
	</select>
	
	<!--연도별 급여 조회  -->
	<select id="selectPay_mine_Yearly" resultType="com.toinfra.DTO.Pay">
		select pay_no, emp_no, basic_pay, bonus, add_pay, total_pay, give_date
		from pay
		where emp_no = #{param1} and give_date like '%${param2}%'
		order by give_date asc
	</select>
	
	<!--급여 지급일 조회  -->
	<select id="selectGive_date" resultType="String">
		select give_date from pay where emp_no=#{param1} and give_date like '%${param2}%'
	</select>
	
	<!--입사일 조회하기  -->
	<select id="selectRegdate" resultType="String">
		select regdate from emp_his e join emp_his_cg c on e.cg_no=c.cg_no where emp_no=#{emp_no} and c.cg_name='입사'
	</select>

	<!-- 본인 금월 예상 급여 조회하기 -->
	<select id="selectPay_mine" resultType="com.toinfra.DTO.Pay">
	    select pay_no, e.emp_no, basic_pay, bonus, add_pay, severance_pay
        acc_commute_time, acc_add_time, total_pay, give_date
		from userDto e join pay y
		on e.emp_no = y.emp_no
		join (select emp_no, max(acc_commute_time) as acc_commute_time, max(acc_add_time) as acc_add_time, mgr_check
		      from commute
		      where to_char(to_date(regdate), 'yyyy-mm') = #{param2}
		      group by emp_no, mgr_check) c
		on e.emp_no = c.emp_no
		where give_date is null and e.emp_no=#{param1} and c.mgr_check='1'
		order by TO_NUMBER(pay_no) desc
	</select>
	
	<!-- 전체 급여 내역 조회하기 -->
	<select id="selectPay_all" resultType="com.toinfra.DTO.Pay">
		 select give_date, sum(total_pay) as total_pay
		from pay p join userDto e
		on p.emp_no = e.emp_no
	   	where give_date is not null
	    group by give_date
	    order by give_date asc
	</select>
		
	<!-- 급여 마감 관리 전체 급여 내역 조회하기 -->
	<select id="selectPay_all_Close" resultType="com.toinfra.DTO.PayList">

	select pay_no, d.branch_name, d.dept_name, d.low_dept_name, position_name, e.emp_no, emp_name, acc_commute_time, acc_add_time, total_pay, give_date, master_check
	from userDto e join position p
	on e.position_no = p.position_no
	join pay y
	on e.emp_no = y.emp_no
	join (select g.emp_no,g.acc_commute_time,g.acc_add_time,commute_no,mgr_check from (select emp_no,max(acc_commute_time) as acc_commute_time,max(acc_add_time) as acc_add_time 
	        from commute where substr(regdate, 0,7)=#{param1} group by emp_no) g 
	        join commute c
	        on g.emp_no = c.emp_no and g.acc_commute_time = c.acc_commute_time and g.acc_add_time = c.acc_add_time
	        ) f 
	on e.emp_no = f.emp_no
	join (select e.emp_no, b.branch_name, d.dept_name, l.low_dept_name
	      from userDto e join low_dept l
	      on e.low_dept_no = l.low_dept_no
	      join dept d
	      on l.dept_no = d.dept_no
	      join branch b
	      on b.branch_no = d.branch_no) d
	on e.emp_no = d.emp_no
	where f.mgr_check='1' and give_date is null
	order by TO_NUMBER(pay_no) desc
	</select>
		
	<!-- 월별 급여 상세 보기 - 카드에서 버튼 클릭시 해당 월 급여 지급 리스트 뜸. -  관리자 > 급여 > 급여내역 조회  -->
	<select id="select_payMoth_Detail" parameterType="String" resultType="com.toinfra.DTO.PayList">
     	select pay_no, d.branch_name, d.dept_name, d.low_dept_name, position_name, e.emp_no, emp_name, total_pay, give_date, master_check
	from userDto e join position p
	on e.position_no = p.position_no
	join pay y
	on e.emp_no = y.emp_no
	join (select e.emp_no, b.branch_name, d.dept_name, l.low_dept_name
	      from userDto e join low_dept l
	      on e.low_dept_no = l.low_dept_no
	      join dept d
	      on l.dept_no = d.dept_no
	      join branch b
	      on b.branch_no = d.branch_no) d
	on e.emp_no = d.emp_no
	where give_date like '%${date}%'
	order by TO_NUMBER(pay_no) desc
	</select>
	
	<!-- 전체 금월 예상 급여 조회하기 -->
	<select id="selectPay">
		select pay_no, p.emp_no, e.emp_name, basic_pay, bonus, add_pay, total_pay, give_date
		from pay p join userDto e
		on p.emp_no = e.emp_no
	    join commute c
	    on e.emp_no=c.emp_no
		where give_date is null and c.mgr_check='1'
		order by e.position_no
	</select>
	
	<!-- 관리자] 급여 확정하기 -->
	<update id="updatePay" parameterType="String">
		update pay
		set master_check = '1', give_date=#{param2}
		where pay_no = #{param1}
	</update>
	
	<!-- 급여지급일 조회하기 -->
	<select id="selectpay_date" resultType="String">
	  select pay_date from set_pay_date
	</select>
	
	<!--급여일 등록하기  -->
	<insert id="insertpay_date" parameterType="com.toinfra.DTO.Set_pay_date">
		insert into set_pay_date(set_date, pay_date)  values(#{set_date}, #{pay_date})
	</insert>
	
	<!-- 급여일 수정하기 -->
	<update id="updatepay_date" parameterType="com.toinfra.DTO.Set_pay_date">
		update set_pay_date
		set set_date = #{set_date}, 
			pay_date = #{pay_date}
	</update>
	
	<!--급여 기본 정보 관리 리스트   -->
	<select id="selectPayList_Manage" resultType="com.toinfra.DTO.PayList">
	    select d.branch_name, d.dept_name, d.low_dept_name, position_name, e.emp_no, emp_name, salary, bank, team_code, h.regdate
		from userDto e join position p
		on e.position_no = p.position_no
		join user_detail y
		on e.emp_no = y.emp_no
	    join (select e.emp_no, b.branch_name, d.dept_name, l.low_dept_name
		      from userDto e join low_dept l
		      on e.low_dept_no = l.low_dept_no
		      join dept d
		      on l.dept_no = d.dept_no
		      join branch b
		      on b.branch_no = d.branch_no) d
		on e.emp_no = d.emp_no
	    join emp_his h 
	    on e.emp_no = h.emp_no
	    where h.cg_no = (select cg_no from emp_his_cg where cg_name = '입사') 
	    order by branch_name
		</select>
	
	<!-- 급여 기본 정보 관리 상세 정보 수정 페이지-->
	<select id="selectPayList_Modify" resultType="com.toinfra.DTO.PayList">
	    select d.branch_name, d.dept_name, d.low_dept_name, position_name, e.emp_no, emp_name, salary, bank, team_code, h.regdate
		from userDto e join position p
		on e.position_no = p.position_no
		join user_detail y
		on e.emp_no = y.emp_no
	    join (select e.emp_no, b.branch_name, d.dept_name, l.low_dept_name
		      from userDto e join low_dept l
		      on e.low_dept_no = l.low_dept_no
		      join dept d
		      on l.dept_no = d.dept_no
		      join branch b
		      on b.branch_no = d.branch_no) d
		on e.emp_no = d.emp_no
	    join emp_his h 
	    on e.emp_no = h.emp_no
	    where h.cg_no = (select cg_no from emp_his_cg where cg_name = '입사') and e.emp_no=#{emp_no}
	  </select>
	  
	  <!-- 급여 기본 정보 수정 1)연봉 -->
	  <update id="update_pay_Info_emp" parameterType="com.toinfra.DTO.PayList">
	    update userDto set salary=#{salary}
	    where emp_no=#{emp_no}
	  </update>
	  
	  <!-- 급여 기본 정보 수정 > 계좌/은행명 -->
	  <update id="update_pay_Info_empdetail" parameterType="com.toinfra.DTO.PayList">
	    update user_detail set bank=#{bank}, team_code=#{account}
	    where emp_no=#{emp_no}
	  </update>
	  
</mapper>